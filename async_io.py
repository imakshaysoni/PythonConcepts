import asyncioimport timeasync def nested_function():    print("Nested Function Running..")    await asyncio.sleep(10)    print("Nested Function Finished.")async def demo_function():    print("Demo Function running....")    await asyncio.sleep(2)    print("Demo Function finished.")async def demo_function_v2():    print("Demo Function V2 running....")    # await nested_function() # wait for its completion    task = asyncio.create_task(nested_function())  # does not wait,    # await task    print("Demo Function V2 Finished....")async def demo_function_v3():    await asyncio.sleep(0.5)    print("Demo Function V3 running....")async def main():    #  Normal Execution, "await" means wait for its completion then execute other one    # await demo_function()    # await demo_function_v2()    # await demo_function_v3()    # Output    """        Demo Function running....        Demo Function finished.        Demo Function V2 running....        Nested Function Running..        Nested Function Finished.        Demo Function V2 Finished....        Demo Function V3 running....    """    # Creating task for execution if one is in waiting    # task1 = asyncio.create_task(demo_function())    # task2 = asyncio.create_task(demo_function_v3())    # task3 = asyncio.create_task(demo_function_v2())    # print("All Execution Finished.")    # await task1, task2, task3    # Output    """        All Execution Finished.        Demo Function running....        Demo Function V2 running....        Demo Function V2 Finished....        Nested Function Running..        Demo Function V3 running....        Demo Function finished.    """    # Other Pythonic way using gather , instead of defining each task seperate we can use this.    output = await asyncio.gather(demo_function(), demo_function_v2(), demo_function_v3())    print(output)    # Output    """        Demo Function running....        Demo Function V2 running....        Demo Function V2 Finished....        Nested Function Running..        Demo Function V3 running....        Demo Function finished.        [None, None, None] # we are returning nothing that's why output is None for each function.    """asyncio.run(main())
import threadingimport timeclass Disk:    def __init__(self):        self.reader_cv = threading.Condition()        self.writer_cv = threading.Condition()        self.reader_count = 0        self.writer_flag = False    def disk_reader(self):        with self.reader_cv:            while self.writer_flag:                print("reader are waiting")                self.reader_cv.wait()            self.reader_count += 1            print("Reader is working")            time.sleep(0.1)            print("Reader is finished")            self.reader_count -= 1            with self.writer_cv:                self.writer_cv.notify()    def disk_writer(self):        with self.writer_cv:            while self.reader_count > 0:                self.writer_cv.wait()            self.writer_flag = True            print("writer is in process")            time.sleep(0.3)            self.writer_flag = False            print("writer finished")            with self.reader_cv:                self.reader_cv.notify_all()    def reader(self):        while True:            time.sleep(0.44)            self.disk_reader()    def writer(self):        while True:            time.sleep(0.3)            self.disk_writer()reader_writer = Disk()threads = list()t1 = threading.Thread(target=reader_writer.writer)threads.append(t1)for _ in range(1,4):    th = threading.Thread(target=reader_writer.reader)    threads.append(th)for th in threads:    th.start()for th in threads:    th.join()
import randomimport threadingimport timecondition = threading.Condition()lock = threading.Lock()shared_list = []limit = 5def producer():    with condition:        while True:            if len(shared_list) == limit:                print("Buffer is full, Producer is waiting")                condition.wait()            item = random.randint(1, 10)            print(f"Produced Item: {item}")            shared_list.append(item)            condition.notify()def consumer():    with condition:        while True:            if len(shared_list) == 0:                print("Buffer is empty, Consumer is waiting")                condition.wait()            print(f"Consumed Item: {shared_list.pop()}")            condition.notify()t1 = threading.Thread(target=producer)t2 = threading.Thread(target=consumer)t1.start()t2.start()t1.join()t2.join()
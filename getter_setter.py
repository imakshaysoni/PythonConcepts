class DemoClass:    def __init__(self):        self._value = 10    def get_value(self):        return self._value    def update_value(self, new_value):        self._value = new_value    # Getter    @property    def value(self):        return self._value    # Setter    @value.setter    def value(self, new_value):        self._value = new_valueobj = DemoClass()print(obj.get_value())obj.update_value(20)print(obj.get_value())# Output# 10# 20# Using Getter & Setter# As we see, _value is private variable, so we are not supposed to update its _valueprint(obj.value)  # Output -> 20obj.value = 40print(obj.value)  # Output -> 40# This is the way, Getter & Setter is implemented.